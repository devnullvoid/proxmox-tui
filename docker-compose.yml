version: '3.8'

services:
  proxmox-tui:
    build:
      context: .
      dockerfile: Dockerfile
    image: proxmox-tui:latest
    container_name: proxmox-tui
    restart: "no"  # Don't restart for interactive TUI apps
    
    # Environment variables (matching config.go)
    environment:
      - PROXMOX_ADDR=${PROXMOX_ADDR:-https://your-proxmox-server:8006}
      - PROXMOX_USER=${PROXMOX_USER:-root@pam}
      - PROXMOX_PASSWORD=${PROXMOX_PASSWORD}
      - PROXMOX_REALM=${PROXMOX_REALM:-pam}
      - PROXMOX_TOKEN_ID=${PROXMOX_TOKEN_ID}
      - PROXMOX_TOKEN_SECRET=${PROXMOX_TOKEN_SECRET}
      - PROXMOX_API_PATH=${PROXMOX_API_PATH:-/api2/json}
      - PROXMOX_INSECURE=${PROXMOX_INSECURE:-false}
      - PROXMOX_DEBUG=${PROXMOX_DEBUG:-false}
      - PROXMOX_CACHE_DIR=${PROXMOX_CACHE_DIR:-/app/cache}
      - PROXMOX_SSH_USER=${PROXMOX_SSH_USER}
    
    # Volumes for persistence
    # Note: logs are now stored in cache directory (XDG-compliant)
    volumes:
      - ./cache:/app/cache
      - ./configs:/app/configs:ro
    
    # TTY and interactive for TUI applications
    tty: true
    stdin_open: true
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

# Note: For TUI applications, use 'docker-compose up' (not 'docker-compose up -d')
# The -d flag runs in detached mode which doesn't work for interactive applications

# Optional: Redis for distributed caching (if needed in the future)
# redis:
#   image: redis:7-alpine
#   container_name: proxmox-tui-redis
#   restart: unless-stopped
#   volumes:
#     - redis_data:/data
#   command: redis-server --appendonly yes

# volumes:
#   redis_data: 