name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Get version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Build for multiple platforms
        platforms=(
          "linux/amd64"
          "linux/arm64"
          "darwin/amd64" 
          "darwin/arm64"
          "windows/amd64"
        )
        
        for platform in "${platforms[@]}"; do
          GOOS=${platform%/*}
          GOARCH=${platform#*/}
          
          if [ "$GOOS" = "windows" ]; then
            BINARY_NAME="proxmox-tui-${GOOS}-${GOARCH}.exe"
          else
            BINARY_NAME="proxmox-tui-${GOOS}-${GOARCH}"
          fi
          
          echo "Building $BINARY_NAME..."
          GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-s -w" -o "dist/$BINARY_NAME" ./cmd/proxmox-tui
        done
        
        # List built binaries
        ls -la dist/

    - name: Create archives
      run: |
        cd dist
        
        # Create tar.gz archives for Unix-like systems
        for file in proxmox-tui-linux-* proxmox-tui-darwin-*; do
          if [ -f "$file" ]; then
            archive_name="${file}.tar.gz"
            echo "Creating $archive_name..."
            tar -czf "$archive_name" "$file"
          fi
        done
        
        # Create zip archives for Windows
        for file in proxmox-tui-windows-*.exe; do
          if [ -f "$file" ]; then
            archive_name="${file%.exe}.zip"
            echo "Creating $archive_name..."
            zip "$archive_name" "$file"
          fi
        done
        
        # List all files
        ls -la

    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        cat checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.tar.gz
          dist/*.zip
          dist/checksums.txt
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
        body: |
          ## üöÄ Release ${{ steps.version.outputs.VERSION }}
          
          ### üì¶ Downloads
          
          Choose the appropriate binary for your platform:
          
          - **Linux AMD64**: `proxmox-tui-linux-amd64.tar.gz`
          - **Linux ARM64**: `proxmox-tui-linux-arm64.tar.gz`
          - **macOS Intel**: `proxmox-tui-darwin-amd64.tar.gz`
          - **macOS Apple Silicon**: `proxmox-tui-darwin-arm64.tar.gz`
          - **Windows**: `proxmox-tui-windows-amd64.zip`
          
          ### üîê Verification
          
          Verify your download with the provided `checksums.txt` file:
          ```bash
          sha256sum -c checksums.txt
          ```
          
          ### üìã Installation
          
          1. Download the appropriate archive for your platform
          2. Extract the binary: `tar -xzf proxmox-tui-*.tar.gz` (or unzip for Windows)
          3. Make executable (Unix): `chmod +x proxmox-tui-*`
          4. Run: `./proxmox-tui-* --help` 