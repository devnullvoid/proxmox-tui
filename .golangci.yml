# golangci-lint configuration file
# Documentation: https://golangci-lint.run/usage/configuration/

# Options for analysis running
run:
  timeout: 5m
  go: "1.24"
  modules-download-mode: readonly

  # Include test files or not
  tests: true

# Linters configuration
linters:
  # Enable essential linters plus a few more useful ones
  enable:
    - dupl
    - goconst
    - misspell
    - staticcheck
    - errcheck
    - gosec
    - revive
    - whitespace
    - lll

# Issues configuration
issues:
  # Maximum issues count per one linter
  max-issues-per-linter: 0

  # Maximum count of issues with the same text
  max-same-issues: 0

  # Exclude specific issues by linter and rule
  exclude-rules:
    # Exclude errcheck issues in UI components (false positives)
    - path: internal/ui/
      linters:
        - errcheck

    # Exclude gosec issues in test files and scripts (intentional)
    - path: test/
      linters:
        - gosec
    - path: internal/scripts/
      linters:
        - gosec
    - path: internal/vnc/
      linters:
        - gosec
    - path: pkg/api/
      linters:
        - gosec

    # Exclude staticcheck issues in test files
    - path: test/
      linters:
        - staticcheck

    # Exclude deprecated field warnings for now (we're working on migration)
    - linters:
        - staticcheck
      text: "SA1019: .* is deprecated: legacy single-profile fields for migration"

    # Exclude potential nil pointer dereference in tests (acceptable for test code)
    - linters:
        - staticcheck
      text: "SA5011: possible nil pointer dereference"
      path: test/

    # Exclude hardcoded credentials in test files (acceptable for test code)
    - linters:
        - gosec
      text: "G101: Potential hardcoded credentials"
      path: test/

    # Exclude unused parameter warnings (interface compliance)
    - linters:
        - revive
      text: "unused-parameter: parameter .* seems to be unused"

    # Exclude line length warnings (handled by gofumpt)
    - linters:
        - lll
      text: "The line is .* characters long"

    # Exclude whitespace warnings (handled by gofumpt)
    - linters:
        - whitespace
      text: ".*"

    # Exclude indent-error-flow warnings (common pattern)
    - linters:
        - revive
      text: "indent-error-flow: if block ends with a return statement"

    # Exclude var-naming warnings for now (complex breaking changes)
    - linters:
        - revive
      text: "var-naming:"

    # Exclude type stuttering warnings (complex breaking changes)
    - linters:
        - revive
      text: "exported: type name will be used as"
