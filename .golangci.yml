version: "2"

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

output:
  formats:
    text:
      print-issued-lines: true
      print-linter-name: true

linters-settings:
  govet:
    enable:
      - shadow

linters:
  default: none
  enable:
    - govet
    - ineffassign
    - unused
    - dupl
    - misspell
    - unconvert

issues:
  exclude-rules:
    - path: .*_test\.go$
      linters:
        - dupl


    - linters:
        - lll
      source: "^//go:generate "


  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked

    # errcheck: Ignore fmt.Scanln in interactive components
    - Error return value of `fmt\.Scanln` is not checked

    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)

    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop

    # gosec: Too many false-positives on 'unsafe' usage
    - (G103|G104|G204|G301|G302|G304|G401|G501|G502)

    # gosec: These only make sense when scoped to a specific package, and they would be annoying to fix
    - (G201|G202)

  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
